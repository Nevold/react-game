{"version":3,"sources":["components/Square.js","components/img/setting.png","components/img/palette.png","components/ListColor.js","components/Boards.js","Game.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","onClickButton","style","styles","value","ListColor","standoff","isWinnerPlayer","squares","lines","i","length","a","b","c","filter","item","Board","status","useState","Array","fill","setSquares","nextPlayer","setNextPlayer","squaresSet","history","setHistory","stepNumber","setStepNumber","showClass","setShowClass","showClassColor","setShowClassColor","color","divStyle","setDivStyle","current","winner","steps","map","_","index","stepTo","renderSquare","historySet","slice","concat","handleClick","useEffect","window","addEventListener","e","code","src","setting","alt","console","log","palette","Game","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c23dd48.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Square.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={() => props.onClickButton()} style={props.styles}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","export default __webpack_public_path__ + \"static/media/setting.2a7f039b.png\";","export default __webpack_public_path__ + \"static/media/palette.7497038a.png\";","import React from 'react';\r\nimport './ListColor.css';\r\n\r\nfunction ListColor() {\r\n  return (\r\n    <div>\r\n      <div className=\"paragrafWrapper\">\r\n        <p className=\"paragraf\">Для изменения цвета нажмите:</p>{' '}\r\n      </div>\r\n      <ol className=\"listColor\">\r\n        <li className=\"listColorChild\"> R-красный</li>\r\n        <li className=\"listColorChild\">B-черный </li>\r\n        <li className=\"listColorChild\"> Y-желтый</li>\r\n        <li className=\"listColorChild\"> G-зеленый</li>\r\n        <li className=\"listColorChild\">S-серебряный</li>\r\n      </ol>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListColor;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Square from './Square';\r\nimport './Boards.css';\r\nimport setting from './img/setting.png';\r\nimport palette from './img/palette.png';\r\nimport ListColor from './ListColor';\r\n\r\nconst standoff = 'Ничья!';\r\n\r\nfunction isWinnerPlayer(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n    if (squares.filter((item) => item !== null).length === 9) {\r\n      return standoff;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction Board() {\r\n  let [squares, setSquares] = useState(Array(9).fill(null));\r\n  let [nextPlayer, setNextPlayer] = useState(true);\r\n  let [history, setHistory] = useState([{ squaresSet: Array(9).fill(null) }]);\r\n  let [stepNumber, setStepNumber] = useState(0);\r\n  let [showClass, setShowClass] = useState(false);\r\n  let [showClassColor, setShowClassColor] = useState(false);\r\n  let [divStyle, setDivStyle] = useState({\r\n    color: 'black',\r\n  });\r\n\r\n  function handleClick(i) {\r\n    const historySet = history.slice(0, stepNumber + 1);\r\n    const currentHistory = historySet[historySet.length - 1];\r\n    const squaresSet = currentHistory.squaresSet.slice();\r\n\r\n    if (isWinnerPlayer(squaresSet) || squaresSet[i]) {\r\n      return;\r\n    }\r\n\r\n    squaresSet[i] = nextPlayer ? 'X' : 'O';\r\n\r\n    setSquares(() => squaresSet);\r\n    setNextPlayer(() => !nextPlayer);\r\n    setStepNumber(() => history.length);\r\n    setHistory(() =>\r\n      history.concat([\r\n        {\r\n          squaresSet,\r\n        },\r\n      ])\r\n    );\r\n  }\r\n\r\n  function handleShowClass() {\r\n    setShowClass(!showClass);\r\n  }\r\n\r\n  function handleShowClassColor() {\r\n    setShowClassColor(!showClassColor);\r\n    console.log(showClassColor);\r\n  }\r\n\r\n  function stepTo(index) {\r\n    setStepNumber(index);\r\n    setNextPlayer(index % 2 === 0);\r\n  }\r\n\r\n  const current = history[stepNumber];\r\n  const winner = isWinnerPlayer(current.squaresSet);\r\n\r\n  let status;\r\n  if (winner === 'X' || winner === 'O') {\r\n    status = 'Выиграл игрок ' + winner;\r\n  } else if (winner === standoff) {\r\n    status = standoff;\r\n  } else {\r\n    status = `Ход игрока: ${nextPlayer ? 'X' : 'O'}`;\r\n  }\r\n\r\n  const steps = history.map((_, index) => {\r\n    return (\r\n      <li className=\"step\" key={index} onClick={() => stepTo(index)}>\r\n        {index ? 'Ход №' + index : 'Новая игра'}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  function renderSquare(i) {\r\n    return <Square value={current.squaresSet[i]} onClickButton={() => handleClick(i)} key={i} styles={divStyle} />;\r\n  }\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', (e) => {\r\n      if (e.code === 'KeyR') {\r\n        setDivStyle({\r\n          color: 'red',\r\n        });\r\n      }\r\n      if (e.code === 'KeyB') {\r\n        setDivStyle({\r\n          color: 'black',\r\n        });\r\n      }\r\n      if (e.code === 'KeyG') {\r\n        setDivStyle({\r\n          color: 'green',\r\n        });\r\n      }\r\n      if (e.code === 'KeyS') {\r\n        setDivStyle({\r\n          color: 'silver',\r\n        });\r\n      }\r\n\r\n      if (e.code === 'KeyY') {\r\n        setDivStyle({\r\n          color: 'yellow',\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"boards-wrapper\">\r\n      <div className=\"colorInfo\">\r\n        <div className={showClassColor ? 'infoOn' : 'infoOff'}>\r\n          <ListColor />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className=\"status\">{status}</div>\r\n        <div className=\"square-wrapper\" style={divStyle}>\r\n          {squares.map((_, index) => renderSquare(index))}\r\n        </div>\r\n        <div className=\"settingWrapper\">\r\n          <div className=\"setting\" onClick={() => handleShowClass()}>\r\n            <img className=\"setImg\" src={setting} alt=\"Настройки\" />\r\n          </div>\r\n          <div className=\"settingColor\" onClick={() => handleShowClassColor()}>\r\n            <img className=\"setPalette\" src={palette} alt=\"Цвет\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"gameInfo\">\r\n        <div className={showClass ? 'infoOn' : 'infoOff'}>\r\n          <ol className=\"listStep\">{steps}</ol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport Board from './components/Boards';\r\n\r\nfunction Game() {\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">\r\n        <Board />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}